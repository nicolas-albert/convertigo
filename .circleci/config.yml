defaults: &defaults

  working_directory: /home/circleci/repo
  
  environment:
  - AWS_DEFAULT_REGION: eu-west-3
  - MAVEN_OPTS: -Xmx2800m
  
  docker:
  - image: convertigo/builder-ci:circleci-4
  
version: 2
jobs:
  build_engine_jar:
    <<: *defaults
    
    docker:
    - image: circleci/openjdk:11-stretch
    
    steps:
    
#     - restore_cache:
#         keys:
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-
        
    - checkout
    
#     - save_cache:
#         paths:
#         - .git
#         key: v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
        
    - restore_cache:
        keys:
        - v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-
        
    - restore_cache:
        keys:
        - v2-build-cache-{{ .Revision }}
        - v2-build-cache-
        
    - run:
        name: Prepare build.env
        command: |
          export CONVERTIGO_VERSION_NUMBER=$(sed -n "s/ext.convertigoVersion = '\(.*\)'/\\1/p" build.gradle)
          export CONVERTIGO_VERSION_TAG=$(sed -n "s/ext.convertigoTag = '\(.*\)'/\\1/p" build.gradle)
          if [ "$CONVERTIGO_VERSION_TAG" = "" ] ; then
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER
          else
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER-$CONVERTIGO_VERSION_TAG
          fi
          export CONVERTIGO_BUILD_NUM=$(printf '%05d' $CIRCLE_BUILD_NUM)
          if [ "$CIRCLE_BRANCH" = "" ] ; then
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CIRCLE_TAG
            export CONVERTIGO_DOCKER_IMAGE=$CIRCLE_TAG
            export CONVERTIGO_DOCKER=convertigo/convertigo
            if [[ "$CIRCLE_TAG" =~ [a-zA-Z] ]] ; then
              export CONVERTIGO_BRANCH=""
            else
              export CONVERTIGO_BRANCH=latest
            fi
          else
            export CONVERTIGO_BRANCH=$(echo $CIRCLE_BRANCH | sed "s,/,-,")
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER_IMAGE=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER=convertigo/convertigo-ci
          fi
          export CONVERTIGO_URL=https://convertigo-ci.s3-eu-west-3.amazonaws.com/convertigo-$CONVERTIGO_BUILD_NAME
          mkdir -p ~/s3/convertigo-$CONVERTIGO_BUILD_NAME
          export CONVERTIGO_DIST=$(cd ~/s3/convertigo-$CONVERTIGO_BUILD_NAME; pwd)
          
          export echo DATE=$(date)
          
          env | grep -e "^CIRCLE" -e "^CONVERTIGO_" -e "^DATE=" | sort > $CONVERTIGO_DIST/env.txt
          env | grep -e "^CONVERTIGO_" -e "^DATE=" | sed -e "s, ,\\\\ ,g" > /tmp/build.env
          
          echo "/tmp/build.env: "
          cat /tmp/build.env
          
    - save_cache:
        paths:
        - /tmp/build.env
        key: v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - add_ssh_keys:
        fingerprints:
        - "0f:4a:26:54:4c:1d:13:d5:4a:40:08:b8:35:a7:5d:34"
        
    - run:
        name: Build engine.jar and documentation's .md
        command: |
          source /tmp/build.env
          test -d ~/.gradle/caches && find ~/.gradle/caches -name "*-SNAPSHOT" -exec rm -rf {} +
          if [ "$CIRCLE_BRANCH" == "" ] ; then
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
          else
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
          fi
          
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - ~/.gradle/caches/build-cache-1
        key: v2-build-cache-{{ .Revision }}
    
    - run:
        name: Clean workspace before saving
        command: rm -rf .git convertigo-doc convertigo-templates gradle-plugin
    
    - store_artifacts:
        path: /home/circleci/s3
        destination: env
    
    - persist_to_workspace:
        root: ..
        paths:
        - .
        
  build_engine_war:
    <<: *defaults
    
    steps:
    
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v1-resources-
        
    - run:
        name: Make WARs
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :engine:warLinux32
          mv engine/build/libs/*.war $CONVERTIGO_DIST/
          
    - save_cache:
        paths:
        - resources
        key: v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - docker
        key: v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sign WARs with GPG
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/convertigo.gpg.aes -out installers/convertigo.gpg -k $PFX_AES
          mkdir -p ~/.gnupg
          tar -xvf installers/convertigo.gpg -C ~/.gnupg
          find $CONVERTIGO_DIST -type f -name "*.war" -exec gpg -ab {} \;
          
    - run:
        name: Sync WARs to S3
        command: |
          source /tmp/build.env
          aws s3 sync --acl public-read ~/s3 s3://convertigo-ci/
          for folder in $(aws s3 ls s3://convertigo-ci/ | grep convertigo- | head -n -36 | sed "s/ *PRE //"); do
            aws s3 rm s3://convertigo-ci/${folder} --recursive
          done
          
  build_docker_default:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Docker build and push for default
        command: |
          source /tmp/build.env
          export TYPE=default
          cd docker/$TYPE
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          echo "CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL"
          sed -e "s,ENV CONVERTIGO_WAR_URL .*,ENV CONVERTIGO_WAR_URL $CONVERTIGO_WAR_URL," -i.bak Dockerfile
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          docker build --rm=false -t $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE .
          docker push $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE
          if [ "$CONVERTIGO_BRANCH" != "" ] ; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH
          fi
          if [ "$CONVERTIGO_BRANCH" = "develop" ] || [ "$CONVERTIGO_BRANCH" = "latest" ]; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION
          fi
          
  build_docker_aks:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Docker build and push for aks
        command: |
          source /tmp/build.env
          export TYPE=aks
          cd docker/$TYPE
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          echo "CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL"
          sed -e "s,ENV CONVERTIGO_WAR_URL .*,ENV CONVERTIGO_WAR_URL $CONVERTIGO_WAR_URL," -i.bak Dockerfile
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          docker build --rm=false -t $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE .
          docker push $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE
          if [ "$CONVERTIGO_BRANCH" != "" ] ; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-$TYPE $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE
          fi
          if [ "$CONVERTIGO_BRANCH" = "develop" ] || [ "$CONVERTIGO_BRANCH" = "latest" ]; then
            docker tag $CONVERTIGO_DOCKER:$CONVERTIGO_BRANCH-$TYPE $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION-$TYPE
            docker push $CONVERTIGO_DOCKER:$CONVERTIGO_VERSION-$TYPE
          fi
          
  qualif_jmx_1:
    <<: *defaults
    steps:
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Checkout the qualif-jmx-1 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 7.8.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-1.git
          
    - run:
        name: Pull the docker aks image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE-aks
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v1
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-1
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  qualif_jmx_2:
    <<: *defaults
    steps:
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker
    
    - run:
        name: Checkout the qualif-jmx-2 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 7.8.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-2.git
          
    - run:
        name: Pull the docker default image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v2
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-2
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  qualif_jmx_3:
    <<: *defaults
    steps:
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker
    
    - run:
        name: Checkout the qualif-jmx-3 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          echo -e "Host bitbucket.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
          git clone --depth 1 -b 7.8.x git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-3.git
          
    - run:
        name: Pull the docker default image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=$CONVERTIGO_DOCKER:$CONVERTIGO_DOCKER_IMAGE
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v2
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-3
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  build_studio:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v3-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v3-m2-
        
    - run:
        name: Build Studio
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME buildStudio | grep -v -e '^[[:space:]]*$' -e 'Comparing' -e 'Progress'
          
    - save_cache:
        paths:
        - ~/.m2
        key: v3-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
  release:
    docker:
    - image: cibuilds/github:latest
    
    steps:
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sync builds to GitHub
        command: |
          source /tmp/build.env
          mkdir dist
          for f in "convertigo-studio-$CONVERTIGO_VERSION-win64.exe" \
                   "convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz" \
                   "convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz" \
                   "convertigo-linux32-$CONVERTIGO_VERSION.war" \
                   "convertigo-$CONVERTIGO_VERSION.war"  ; do
            curl -sf $CONVERTIGO_URL/$f --output dist/$f || echo "$f not found"
            curl -sf $CONVERTIGO_URL/$f.asc --output dist/$f.asc || echo "$f.asc not found"
          done
          VERSION=$CIRCLE_TAG
          PRELEASE="-prerelease"
          if [ "$CONVERTIGO_VERSION_NUMBER" = "$VERSION" ] && \
             [ $(echo $VERSION | sed -r s/\\d+\\.\\d+\\.\\d+/ok/) = "ok" ] ; then
            PRELEASE=""
          fi
          ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 \
              -n Convertigo\ $CIRCLE_TAG -b To\ Edit -draft -delete $PRELEASE $VERSION dist
          
workflows:
  version: 2
  all:
    jobs:
    - build_engine_jar:
        filters:
          branches:
            ignore:
            - 7.5.x
          tags:
            only: /^\d+\..*$/
    - build_studio:
        requires:
        - build_engine_jar
        filters:
          tags:
            only: /^\d+\..*$/
