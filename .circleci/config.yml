defaults: &defaults

  working_directory: /home/circleci/repo
  
  environment:
  - AWS_DEFAULT_REGION: eu-west-3
  - MAVEN_OPTS: -Xmx2800m
  
  docker:
  - image: convertigo/builder-ci:circleci-5
  
version: 2
jobs:
  build_engine_jar:
    <<: *defaults
    
    docker:
    - image: circleci/openjdk:11-buster
    
    steps:
    
#     - restore_cache:
#         keys:
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
#         - v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-
        
    - checkout
    
#     - save_cache:
#         paths:
#         - .git
#         key: v1-git-{{ .Branch }}-{{ .Environment.CIRCLE_TAG }}-{{ .Revision }}
        
    - restore_cache:
        keys:
        - v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-
        
    - restore_cache:
        keys:
        - v2-build-cache-{{ .Revision }}
        - v2-build-cache-
        
    - run:
        name: Prepare build.env
        command: |
          export CONVERTIGO_VERSION_NUMBER=$(sed -n "s/ext.convertigoVersion = '\(.*\)'/\\1/p" build.gradle)
          export CONVERTIGO_VERSION_TAG=$(sed -n "s/ext.convertigoTag = '\(.*\)'/\\1/p" build.gradle)
          if [ "$CONVERTIGO_VERSION_TAG" = "" ] ; then
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER
          else
            export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER-$CONVERTIGO_VERSION_TAG
          fi
          export CONVERTIGO_BUILD_NUM=$(printf '%05d' $CIRCLE_BUILD_NUM)
          if [ "$CIRCLE_BRANCH" = "" ] ; then
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CIRCLE_TAG
            export CONVERTIGO_DOCKER_IMAGE=$CIRCLE_TAG
            export CONVERTIGO_DOCKER=convertigo/convertigo
            if [[ "$CIRCLE_TAG" =~ [a-zA-Z] ]] ; then
              export CONVERTIGO_BRANCH=""
            else
              export CONVERTIGO_BRANCH=latest
            fi
          else
            export CONVERTIGO_BRANCH=$(echo $CIRCLE_BRANCH | sed "s,/,-,")
            export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER_IMAGE=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
            export CONVERTIGO_DOCKER=convertigo/convertigo-ci
          fi
          export CONVERTIGO_URL=https://convertigo-ci.s3-eu-west-3.amazonaws.com/convertigo-$CONVERTIGO_BUILD_NAME
          mkdir -p ~/s3/convertigo-$CONVERTIGO_BUILD_NAME
          export CONVERTIGO_DIST=$(cd ~/s3/convertigo-$CONVERTIGO_BUILD_NAME; pwd)
          
          export echo DATE=$(date)
          
          env | grep -e "^CIRCLE" -e "^CONVERTIGO_" -e "^DATE=" | sort > $CONVERTIGO_DIST/env.txt
          env | grep -e "^CONVERTIGO_" -e "^DATE=" | sed -e "s, ,\\\\ ,g" > /tmp/build.env
          
          echo "/tmp/build.env: "
          cat /tmp/build.env
          
    - save_cache:
        paths:
        - /tmp/build.env
        key: v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - add_ssh_keys:
        fingerprints:
        - "0f:4a:26:54:4c:1d:13:d5:4a:40:08:b8:35:a7:5d:34"
        
    - run:
        name: Build engine.jar and documentation's .md
        command: |
          source /tmp/build.env
          test -d ~/.gradle/caches && find ~/.gradle/caches -name "*-SNAPSHOT" -exec rm -rf {} +
          if [ "$CIRCLE_BRANCH" == "" ] ; then
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
          else
            sh gradlew --info --stacktrace $M2_ARGS -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
          fi
          
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - ~/.gradle/caches/build-cache-1
        key: v2-build-cache-{{ .Revision }}
    
    - run:
        name: Clean workspace before saving
        command: rm -rf .git convertigo-doc convertigo-templates gradle-plugin
    
    - store_artifacts:
        path: /home/circleci/s3
        destination: env
    
    - persist_to_workspace:
        root: ..
        paths:
        - .
   
  build_studio:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v3-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v3-m2-
        
    - run:
        name: Build Studio
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME buildStudio | grep -v -e '^[[:space:]]*$' -e 'Comparing' -e 'Progress'
          
    - save_cache:
        paths:
        - ~/.m2
        key: v3-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - restore_cache:
        keys:
        - v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Download JDKs
        command: |
          if [ ! -d /tmp/c8o_jre ] ; then
              sh installers/nsis/download-jdk.sh
          fi
          du -sh /tmp/c8o_jre/*
          
    - save_cache:
        paths:
        - /tmp/c8o_jre
        key: v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Sign exe and make archives
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/nsis/convertigo.pfx.aes -out /tmp/convertigo.pfx -k $PFX_AES
          
          dir_w64=eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64
          dir_lin=eclipse-repository/target/products/com.convertigo.studio/linux/gtk/x86_64
          dir_mac=eclipse-repository/target/products/com.convertigo.studio/macosx/cocoa/x86_64
          
          if [ -d ${dir_w64} ]; then
             (mv /tmp/c8o_jre/x64 ${dir_w64}/jre
              mv ${dir_w64}/ConvertigoStudio.exe /tmp/ConvertigoStudio_x86_64.exe
              TIMESTAMP=http://timestamp.digicert.com
              if [ ! $(osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe) ]; then
                TIMESTAMP=http://timestamp.verisign.com/scripts/timstamp.dll
                if [ ! $(osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe) ]; then
                  TIMESTAMP=http://timestamp.globalsign.com/scripts/timstamp.dll
                  osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/ConvertigoStudio_x86_64.exe -out ${dir_w64}/ConvertigoStudio.exe
                fi
              fi
              dir_w64_web=$(dirname ${dir_w64}/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_w64_web}/build.txt
              echo "build.date=$(date)" >> ${dir_w64_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-win64.exe" >> ${dir_w64_web}/build.txt
              makensis -V1 -DConvertigoVersion=$CONVERTIGO_VERSION_NUMBER -DArch=x86_64 -DOutFile=/tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe installers/nsis/studio.nsi
              osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t $TIMESTAMP -in /tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe -out $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-win64.exe) &
          fi
          if [ -d ${dir_lin} ]; then
              dir_lin_web=$(dirname ${dir_lin}/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_lin_web}/build.txt
              echo "build.date=$(date)" >> ${dir_lin_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz" >> ${dir_lin_web}/build.txt
              mv ${dir_lin} convertigo-studio-$CONVERTIGO_VERSION-linux64
              tar -I "gzip --fast" -cf $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz convertigo-studio-$CONVERTIGO_VERSION-linux64 &
          fi
          if [ -d ${dir_mac} ]; then
              dir_mac_web=$(dirname ${dir_mac}/ConvertigoStudio.app/Contents/Eclipse/plugins/com.twinsoft.convertigo.studio_*/tomcat/webapps/convertigo/WEB-INF/web.xml) 
              echo "build.version=${convertigoRevision}" > ${dir_mac_web}/build.txt
              echo "build.date=$(date)" >> ${dir_mac_web}/build.txt
              echo "build.filename=convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz" >> ${dir_mac_web}/build.txt
              mv ${dir_mac} convertigo-studio-$CONVERTIGO_VERSION-macosx
              tar -I "gzip --fast" -cf $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz convertigo-studio-$CONVERTIGO_VERSION-macosx &
          fi
          for job in $(jobs -p); do
              wait $job
          done
        
    - run:
        name: Sign Studios with GPG
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/convertigo.gpg.aes -out installers/convertigo.gpg -k $PFX_AES
          mkdir -p ~/.gnupg
          tar -xvf installers/convertigo.gpg -C ~/.gnupg
          find $CONVERTIGO_DIST -type f -exec gpg -ab {} \;
          
    - run:
        name: Sync builds to S3
        command: aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ~/s3 s3://convertigo-ci/
    - run:
        name: Remove old Docker images
        command: |
          if [ "$CONVERTIGO_DOCKER" = "convertigo/convertigo-ci" ]; then
            DO="true"
            while [ $DO = "true" ]; do
              DO="false"
              echo "finding images ..."
              for image in $(curl -s 'https://cloud.docker.com/v2/repositories/convertigo/convertigo-ci/tags/?page_size=25&page=5' | jq -r '.results[].name' || true); do
                img=$(echo $image)
                echo "delete $img"
                curl -s -X DELETE -u $DOCKER_USERNAME:$DOCKER_PASSWORD https://cloud.docker.com/v2/repositories/convertigo/convertigo-ci/tags/$img/
                DO="true"
              done
            done
          fi
        
  release:
    docker:
    - image: cibuilds/github:latest
    
    steps:
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sync builds to GitHub
        command: |
          source /tmp/build.env
          mkdir dist
          for f in "convertigo-studio-$CONVERTIGO_VERSION-win64.exe" \
                   "convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz" \
                   "convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz" \
                   "convertigo-linux32-$CONVERTIGO_VERSION.war" \
                   "convertigo-$CONVERTIGO_VERSION.war"  ; do
            curl -sf $CONVERTIGO_URL/$f --output dist/$f || echo "$f not found"
            curl -sf $CONVERTIGO_URL/$f.asc --output dist/$f.asc || echo "$f.asc not found"
          done
          VERSION=$CIRCLE_TAG
          PRELEASE="-prerelease"
          if [ "$CONVERTIGO_VERSION_NUMBER" = "$VERSION" ] && \
             [ $(echo $VERSION | sed -r s/\\d+\\.\\d+\\.\\d+/ok/) = "ok" ] ; then
            PRELEASE=""
          fi
          ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 \
              -n Convertigo\ $CIRCLE_TAG -b To\ Edit -draft -delete $PRELEASE $VERSION dist
          
workflows:
  version: 2
  all:
    jobs:
    - build_engine_jar:
        filters:
          branches:
            ignore:
            - 7.5.x
          tags:
            only: /^\d+\..*$/
    - build_studio:
        requires:
        - build_engine_jar
        filters:
          tags:
            only: /^\d+\..*$/
