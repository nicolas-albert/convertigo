defaults: &defaults

  working_directory: /home/circleci/repo
  
  environment:
  - AWS_DEFAULT_REGION: eu-west-3
  - MAVEN_OPTS: -Xmx2800m
  
  docker:
  - image: convertigo/builder-ci:circleci-3
  
version: 2
jobs:
  build_engine_jar:
    <<: *defaults
    
    docker:
    - image: circleci/openjdk:8-jdk
    
    steps:
    
    - restore_cache:
        keys:
        - v1-git-{{ .Revision }}
        - v1-git-
        
    - checkout
    
    - save_cache:
        paths:
        - .git
        key: v1-git-{{ .Revision }}
        
    - restore_cache:
        keys:
        - v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-dependencies-
        
    - restore_cache:
        keys:
        - v2-build-cache-{{ .Revision }}
        - v2-build-cache-
        
    - run:
        name: Prepare build.env
        command: |
          export CONVERTIGO_VERSION_NUMBER=$(sed -n "s/ext.convertigoVersion = '\(.*\)'/\\1/p" build.gradle)
          export CONVERTIGO_VERSION_TAG=$(sed -n "s/ext.convertigoTag = '\(.*\)'/\\1/p" build.gradle)
          if [ "$CONVERTIGO_VERSION_TAG" = "" ] ; then
               export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER
          else
               export CONVERTIGO_VERSION=$CONVERTIGO_VERSION_NUMBER-$CONVERTIGO_VERSION_TAG
          fi
          export CONVERTIGO_BUILD_NUM=$(printf '%05d' $CIRCLE_BUILD_NUM)
          export CONVERTIGO_BRANCH=$(echo $CIRCLE_BRANCH | sed "s,/,-,")
          export CONVERTIGO_BUILD_NAME=$CONVERTIGO_BUILD_NUM-$CONVERTIGO_BRANCH-$CONVERTIGO_VERSION
          export CONVERTIGO_URL=https://convertigo-ci.s3-eu-west-3.amazonaws.com/convertigo-$CONVERTIGO_BUILD_NAME
          mkdir -p ~/s3/convertigo-$CONVERTIGO_BUILD_NAME
          export CONVERTIGO_DIST=$(cd ~/s3/convertigo-$CONVERTIGO_BUILD_NAME; pwd)
          env | grep -e "CIRCLE" -e "CONVERTIGO_" | sort > $CONVERTIGO_DIST/env.txt
          env | grep -e "CONVERTIGO_" > /tmp/build.env
          echo "/tmp/build.env: "
          cat /tmp/build.env
          
    - save_cache:
        paths:
        - /tmp/build.env
        key: v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
#    - add_ssh_keys:
#        fingerprints:
#        - "0f:4a:26:54:4c:1d:13:d5:4a:40:08:b8:35:a7:5d:34"
        
#    - run:
#        name: Clone convertigo-doc
#        command: |
#          source /tmp/build.env
#          git clone --depth 1 -b $CIRCLE_BRANCH --single-branch git@github.com:convertigo/convertigo-doc.git || NOCLONE=true
#          if [ "$NOCLONE" = true ]; then
#            git clone --depth 1 -b develop --single-branch git@github.com:convertigo/convertigo-doc.git
#            (cd convertigo-doc && git checkout -b $CIRCLE_BRANCH --track)
#          fi
        
    - run:
        name: Build engine.jar and documentation's .md
        command: |
          source /tmp/build.env
          test -d ~/.gradle/caches && find ~/.gradle/caches -name "*-SNAPSHOT" -exec rm -rf {} +
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :ciFirstStep
#          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME -PdocumentationPath=$PWD/convertigo-doc :engine:generateDocumentationMd :ciFirstStep
        
#    - run:
#        name: Push to convertigo-doc
#        command: |
#          source /tmp/build.env
#          cd convertigo-doc
#          git config --global user.email "info@convertigo.com"
#          git config --global user.name "$CIRCLE_PROJECT_USERNAME"
#          git add .
#          git commit -a -m "Automatic commit from $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME@$CIRCLE_SHA1" || echo "Nothing to commit"
#          git push origin $CIRCLE_BRANCH || echo "Nothing to push"
          
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - ~/.gradle/caches/build-cache-1
        key: v2-build-cache-{{ .Revision }}
    
    - run:
        name: Clean workspace before saving
        command: rm -rf .git convertigo-doc convertigo-templates gradle-plugin
    
    - store_artifacts:
        path: /home/circleci/s3
        destination: env
    
    - persist_to_workspace:
        root: ..
        paths:
        - .
        
  build_engine_war:
    <<: *defaults
    
    steps:
    
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v1-resources-
        
    - run:
        name: Make WARs
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME :engine:warLinux32
          
    - save_cache:
        paths:
        - resources
        key: v1-resources-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
        - docker
        key: v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - run:
        name: Sync WARs to S3
        command: |
           source /tmp/build.env
           mv engine/build/libs/*.war $CONVERTIGO_DIST/
#          source /tmp/build.env 
#          mv engine/build/libs/*.war $CONVERTIGO_DIST/
#          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ~/s3 s3://convertigo-ci/
#          for folder in $(aws s3 ls s3://convertigo-ci/ | grep convertigo- | head -n -36 | sed "s/ *PRE //"); do
#              aws s3 rm s3://convertigo-ci/${folder} --recursive
#          done
          
    - store_artifacts:
        path: /home/circleci/s3
        destination: war
    - persist_to_workspace:
        root: /home/circleci/s3
        paths:
        - .
    
  build_docker_amd64:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Docker build and push for amd64
        command: |
          source /tmp/build.env
          cd docker
          export TYPE=amd64
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          export FROM=$(eval echo $(sed -n "s/FROM \(.*\)/\1/p" Dockerfile))
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          if ! docker pull $FROM ; then
              echo building base $FROM
              docker build --rm=false -f Dockerfile_base -t $FROM .
              docker push $FROM
          fi
          docker build --rm=false -t convertigo/convertigo-ci:$CONVERTIGO_BRANCH --build-arg TYPE=$TYPE --build-arg CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL .
          docker push convertigo/convertigo-ci:$CONVERTIGO_BRANCH
          docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME
          docker push convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME
          if [ "$CONVERTIGO_BRANCH" = "develop" ]; then
              docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH convertigo/convertigo-ci:$CONVERTIGO_VERSION
              docker push convertigo/convertigo-ci:$CONVERTIGO_VERSION
          fi
          
  build_docker_i386:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Docker build and push for i386
        command: |
          source /tmp/build.env
          cd docker
          sed -i "s,tomcat:,i386/tomcat:," Dockerfile_base
          export TYPE=i386
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-linux32-$CONVERTIGO_VERSION.war
          export FROM=$(eval echo $(sed -n "s/FROM \(.*\)/\1/p" Dockerfile))
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          if ! docker pull $FROM ; then
              echo building base $FROM
              docker build --rm=false -f Dockerfile_base -t $FROM .
              docker push $FROM
          fi
          docker build --rm=false -t convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE --build-arg TYPE=$TYPE --build-arg CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL .
          docker push convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE
          docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-$TYPE
          docker push convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-$TYPE
          if [ "$CONVERTIGO_BRANCH" = "develop" ]; then
              docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE convertigo/convertigo-ci:$CONVERTIGO_VERSION-$TYPE
              docker push convertigo/convertigo-ci:$CONVERTIGO_VERSION-$TYPE
          fi
          
  build_docker_alpine:
    <<: *defaults
    
    docker:
    - image: docker:latest
    
    steps:
    
    - restore_cache:
        keys:
        - v1-docker-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker
    
    - run:
        name: Docker build and push for alpine
        command: |
          apk add --no-cache jq curl
          source /tmp/build.env
          cd docker
          export TYPE=alpine
          export CONVERTIGO_WAR_URL=$CONVERTIGO_URL/convertigo-$CONVERTIGO_VERSION.war
          export FROM=$(eval echo $(sed -n "s/FROM \(.*\)/\1/p" Dockerfile))
          echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin
          if ! docker pull $FROM ; then
              echo building base $FROM
              docker build --rm=false -f alpine/Dockerfile_base -t $FROM alpine
              docker push $FROM
          fi
          docker build --rm=false -t convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE --build-arg TYPE=$TYPE --build-arg CONVERTIGO_WAR_URL=$CONVERTIGO_WAR_URL .
          docker push convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE
          docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-$TYPE
          docker push convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-$TYPE
          if [ "$CONVERTIGO_BRANCH" = "develop" ]; then
              docker tag convertigo/convertigo-ci:$CONVERTIGO_BRANCH-$TYPE convertigo/convertigo-ci:$CONVERTIGO_VERSION-$TYPE
              docker push convertigo/convertigo-ci:$CONVERTIGO_VERSION-$TYPE
          fi
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'$DOCKER_USERNAME'", "password": "'$DOCKER_PASSWORD'"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
          TAGS=$(curl 'https://hub.docker.com/v2/repositories/convertigo/convertigo-ci/tags/?page_size=250' -H "Authorization: JWT ${TOKEN}")
          for tag in $( echo $TAGS | jq -r .results[].name | tail -n +36); do
              curl "https://hub.docker.com/v2/repositories/convertigo/convertigo-ci/tags/${tag%$'\r'}/" -X DELETE -H "Authorization: JWT ${TOKEN}"
          done
          
  qualif_jmx_1:
    <<: *defaults
    steps:
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - setup_remote_docker
    
    - run:
        name: Checkout the qualif-jmx-1 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          git clone --depth 1 git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-1.git
          
    - run:
        name: Pull the docker i386 image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-i386
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v1
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-1
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  qualif_jmx_2:
    <<: *defaults
    steps:
    
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    
    - setup_remote_docker
    
    - run:
        name: Checkout the qualif-jmx-2 project
        command: |
          ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
          git clone --depth 1 git@bitbucket.org:convertigoqualif/convertigo-qualif-jmx-2.git
          
    - run:
        name: Pull the docker alpine image
        command: |
          source /tmp/build.env
          CONVERTIGO_IMAGE=convertigo/convertigo-ci:$CONVERTIGO_BUILD_NAME-alpine
          
          docker pull $CONVERTIGO_IMAGE
          docker tag $CONVERTIGO_IMAGE c8o:latest
          docker pull convertigo/qualif-jmeter:v2
          
    - run:
        name: Run the qualif
        command: |
          source /tmp/build.env
          cd convertigo-qualif-jmx-2
          sh run.sh
          mkdir -p $CONVERTIGO_DIST
          mv out $CONVERTIGO_DIST/qualif
          
    - run:
        name: Sync results to S3
        command: |
          source /tmp/build.env
          aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read $CONVERTIGO_DIST/.. s3://convertigo-ci/
          
  build_studio:
    <<: *defaults
    steps:
    - attach_workspace:
        at: ..
        
    - restore_cache:
        keys:
        - v1-build-env-{{ .Environment.CIRCLE_WORKFLOW_ID }}
        
    - restore_cache:
        keys:
        - v2-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        - v2-m2-
        
    - run:
        name: Build Studio
        command: |
          source /tmp/build.env
          sh gradlew --info --stacktrace -PconvertigoRevision=$CONVERTIGO_BUILD_NAME buildStudio | grep -v -e '^[[:space:]]*$' -e 'Comparing' -e 'Progress'
          
    - save_cache:
        paths:
        - ~/.m2
        key: v2-m2-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - save_cache:
        paths:
          - ~/.gradle
          - .gradle
        key: v2-dependencies-studio-{{ checksum "build.gradle" }}-{{ checksum ".circleci/config.yml" }}
        
    - restore_cache:
        keys:
        - v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Download JDKs
        command: |
          if [ ! -d /tmp/c8o_jre ] ; then
              JDK_ARCH=x86 sh installers/nsis/download-jdk.sh &
              JDK_ARCH=x86_64 sh installers/nsis/download-jdk.sh &
              for job in $(jobs -p); do
                  wait $job
              done
          fi
          du -sh /tmp/c8o_jre/*
          
    - save_cache:
        paths:
        - /tmp/c8o_jre
        key: v1-jre-{{ checksum "installers/nsis/download-jdk.sh" }}
        
    - run:
        name: Sign exe and make archives
        command: |
          source /tmp/build.env
          openssl enc -aes-256-cbc -d -md md5 -in installers/nsis/convertigo.pfx.aes -out /tmp/convertigo.pfx -k $PFX_AES
          if [ -d eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64 ]; then
             (mv /tmp/c8o_jre/x86_64 eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64/jre
              mv eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64/ConvertigoStudio.exe /tmp/ConvertigoStudio_x86_64.exe
              osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t http://timestamp.globalsign.com/scripts/timstamp.dll -in /tmp/ConvertigoStudio_x86_64.exe -out eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86_64/ConvertigoStudio.exe
              makensis -V1 -DConvertigoVersion=$CONVERTIGO_VERSION_NUMBER -DArch=x86_64 -DOutFile=/tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe installers/nsis/studio.nsi
              osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t http://timestamp.globalsign.com/scripts/timstamp.dll -in /tmp/convertigo-studio-$CONVERTIGO_VERSION-win64.exe -out $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-win64.exe) &
          fi
          if [ -d eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86 ]; then
             (mv /tmp/c8o_jre/x86 eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86/jre
              mv eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86/ConvertigoStudio.exe /tmp/ConvertigoStudio_x86.exe
              osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t http://timestamp.globalsign.com/scripts/timstamp.dll -in /tmp/ConvertigoStudio_x86.exe -out eclipse-repository/target/products/com.convertigo.studio/win32/win32/x86/ConvertigoStudio.exe
              makensis -V1 -DConvertigoVersion=$CONVERTIGO_VERSION_NUMBER -DArch=x86 -DOutFile=/tmp/convertigo-studio-$CONVERTIGO_VERSION-win32.exe installers/nsis/studio.nsi
              osslsigncode -pkcs12 /tmp/convertigo.pfx -pass $PFX_PWD -t http://timestamp.globalsign.com/scripts/timstamp.dll -in /tmp/convertigo-studio-$CONVERTIGO_VERSION-win32.exe -out $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-win32.exe) &
          fi
          if [ -d eclipse-repository/target/products/com.convertigo.studio/linux/gtk/x86_64 ]; then
              mv eclipse-repository/target/products/com.convertigo.studio/linux/gtk/x86_64 convertigo-studio-$CONVERTIGO_VERSION-linux64
              tar -I "gzip --fast" -cf $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-linux64.tar.gz convertigo-studio-$CONVERTIGO_VERSION-linux64 &
          fi
          if [ -d eclipse-repository/target/products/com.convertigo.studio/macosx/cocoa/x86_64 ]; then
              mv eclipse-repository/target/products/com.convertigo.studio/macosx/cocoa/x86_64 convertigo-studio-$CONVERTIGO_VERSION-macosx
              tar -I "gzip --fast" -cf $CONVERTIGO_DIST/convertigo-studio-$CONVERTIGO_VERSION-macosx.tar.gz convertigo-studio-$CONVERTIGO_VERSION-macosx &
          fi
          for job in $(jobs -p); do
              wait $job
          done
          
#    - run:
#        name: Sync builds to S3
#        command: aws s3 sync --storage-class REDUCED_REDUNDANCY --acl public-read ~/s3 s3://convertigo-ci/
        
    - store_artifacts:
        path: /home/circleci/s3
        destination: studio
        
  release:
    docker:
    - image: cibuilds/github:latest
    steps:
    - attach_workspace:
        at: .
    - run: |
        pwd
        ls -lh
        VERSION=$CIRCLE_TAG
        ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /home/circleci/s3
        
workflows:
  version: 2
  all:
    jobs:
    - build_engine_jar:
        filters:
          branches:
            ignore:
            - 7.5.x
          tags:
            only: /^\d+\..*$/
    - build_engine_war:
        requires:
        - build_engine_jar
#    - build_studio:
#        requires:
#        - build_engine_jar
    - release:
        requires:
        - build_engine_war
#        - build_studio
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^\d+\..*$/
#    - build_docker_amd64:
#        requires:
#        - build_engine_war
#    - build_docker_i386:
#        requires:
#        - build_engine_war
#    - build_docker_alpine:
#        requires:
#        - build_engine_war
#    - qualif_jmx_1:
#        requires:
#        - build_docker_i386
#    - qualif_jmx_2:
#        requires:
#        - build_docker_alpine